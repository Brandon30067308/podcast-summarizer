{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/brandonchikezie/Desktop/work/podcast/apps/next/src/app/api/podcast-episodes/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\n\nexport async function GET(req: NextRequest) {\n  try {\n    const { searchParams } = new URL(req.url);\n\n    const response = await fetch(\n      `${process.env.NEXT_PUBLIC_NODE_API_URL}/api/podcast-episodes?${searchParams.toString()}`\n    );\n\n    if (!response.ok) {\n      const error = await response.json();\n      return NextResponse.json(error, { status: response.status });\n    }\n\n    const data = await response.json();\n    return NextResponse.json(data, { status: 200 });\n  } catch (error: unknown) {\n    console.log(\"error fetching podcasts \", error);\n\n    return NextResponse.json(\n      {\n        error: \"Failed to fetch podcasts. Please try again later.\",\n      },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,IAAI,GAAgB;IACxC,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;QAExC,MAAM,WAAW,MAAM,MACrB,GAAG,QAAQ,GAAG,CAAC,wBAAwB,CAAC,sBAAsB,EAAE,aAAa,QAAQ,IAAI;QAG3F,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,QAAQ,MAAM,SAAS,IAAI;YACjC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,OAAO;gBAAE,QAAQ,SAAS,MAAM;YAAC;QAC5D;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,MAAM;YAAE,QAAQ;QAAI;IAC/C,EAAE,OAAO,OAAgB;QACvB,QAAQ,GAAG,CAAC,4BAA4B;QAExC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,OAAO;QACT,GACA;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}